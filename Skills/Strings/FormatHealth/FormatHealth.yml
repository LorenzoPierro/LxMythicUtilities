#    _    _                              
#   | |  | |                             
#   | |  | |  ___    __ _    __ _    ___ 
#   | |  | | / __|  / _` |  / _` |  / _ \
#   | |__| | \__ \ | (_| | | (_| | |  __/
#    \____/  |___/  \__,_|  \__, |  \___|
#                            __/ |       
#                           |___/        
#
# This Metaskill allows to format numbers into a "TEXT" format and saves it inside <skill.var.return>
# For instance:
#   100         -->  100
#   1000        -->  1K
#   10000       -->  10K
#   1000000     -->  1M
#   1000000000  -->  1B
#
# Required Parameters:
# - value --> the number to format
#
# Output format:
# <skill.var.return> --> the formatted value
#
# Example Usage:
# - skill{s=[
#   - skill:Utility_String_FormatHealth{value=<caster.health>}
#   - command{c="say <skill.var.return>"}
#   ]} @self ~onDamaged


#     _____   _      _   _   _       
#    / ____| | |    (_) | | | |      
#   | (___   | | __  _  | | | |  ___ 
#    \___ \  | |/ / | | | | | | / __|
#    ____) | |   <  | | | | | | \__ \
#   |_____/  |_|\_\ |_| |_| |_| |___/
#
Utility_String_FormatHealth:
  Skills:
  - setvariable{var=skill.return;val=<skill.value>}
  - setvariable{var=skill.magnitude;val=ceil(log10(<skill.var.return>))/3}
  - setvariable{var=skill.return;val=<skill.var.return>/(10^(<skill.var.magnitude>*3))}
  - vskill{s=Utility_String_FormatHealth_Switch_<skill.var.magnitude>}

Utility_String_FormatHealth_Switch_1:
  Skills:
  - setvariable{var=skill.return;type=STRING;val=<skill.var.return>K}
Utility_String_FormatHealth_Switch_2:
  Skills:
  - setvariable{var=skill.return;type=STRING;val=<skill.var.return>M}
Utility_String_FormatHealth_Switch_3:
  Skills:
  - setvariable{var=skill.return;type=STRING;val=<skill.var.return>B}